@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    --radius: 1rem;
    --transition-wave: all 0.6s cubic-bezier(0.4, 0, 0.2, 1);
    --transition-bubble: all 0.4s cubic-bezier(0.34, 1.56, 0.64, 1);
  }

  /* Deep Ocean Abyss Theme - Dark depths with bioluminescence */
  .deep {
    --background: 220 40% 8%;
    --foreground: 190 70% 90%;

    --card: 215 35% 12%;
    --card-foreground: 190 70% 90%;

    --popover: 215 35% 14%;
    --popover-foreground: 190 70% 90%;

    --primary: 180 85% 55%;
    --primary-foreground: 220 40% 8%;

    --secondary: 185 60% 25%;
    --secondary-foreground: 190 70% 90%;

    --muted: 210 30% 18%;
    --muted-foreground: 190 40% 65%;

    --accent: 170 75% 45%;
    --accent-foreground: 220 40% 8%;

    --destructive: 0 75% 55%;
    --destructive-foreground: 190 70% 90%;

    --border: 185 50% 20%;
    --input: 210 30% 15%;
    --ring: 180 85% 55%;

    --gradient-ocean: linear-gradient(180deg, hsl(220, 40%, 8%) 0%, hsl(215, 35%, 12%) 50%, hsl(210, 30%, 15%) 100%);
    --gradient-aqua: linear-gradient(135deg, hsl(180, 85%, 55%) 0%, hsl(170, 75%, 45%) 100%);
    --gradient-glow: radial-gradient(circle, hsl(180, 85%, 55%, 0.15) 0%, transparent 70%);
    
    --shadow-underwater: 0 10px 40px -10px hsl(180, 85%, 55%, 0.3);
    --glow-aqua: 0 0 40px hsl(180, 85%, 55%, 0.6), 0 0 80px hsl(180, 85%, 55%, 0.3);
    --glow-soft: 0 0 25px hsl(170, 75%, 45%, 0.4);
  }

  /* Shallow Waters Theme - Sunlit tropical waters */
  .shallow {
    --background: 195 80% 92%;
    --foreground: 200 50% 15%;

    --card: 190 75% 88%;
    --card-foreground: 200 50% 15%;

    --popover: 190 75% 90%;
    --popover-foreground: 200 50% 15%;

    --primary: 185 85% 38%;
    --primary-foreground: 195 80% 95%;

    --secondary: 180 70% 55%;
    --secondary-foreground: 200 50% 15%;

    --muted: 190 60% 80%;
    --muted-foreground: 200 30% 40%;

    --accent: 175 80% 42%;
    --accent-foreground: 200 50% 15%;

    --destructive: 0 75% 55%;
    --destructive-foreground: 195 80% 95%;

    --border: 185 60% 70%;
    --input: 190 70% 85%;
    --ring: 185 85% 38%;

    --gradient-ocean: linear-gradient(180deg, hsl(195, 80%, 92%) 0%, hsl(190, 75%, 88%) 50%, hsl(185, 70%, 85%) 100%);
    --gradient-aqua: linear-gradient(135deg, hsl(185, 85%, 38%) 0%, hsl(175, 80%, 42%) 100%);
    --gradient-glow: radial-gradient(circle, hsl(185, 85%, 38%, 0.25) 0%, transparent 70%);
    
    --shadow-underwater: 0 10px 40px -10px hsl(185, 85%, 38%, 0.5);
    --glow-aqua: 0 0 35px hsl(185, 85%, 38%, 0.6), 0 0 70px hsl(185, 85%, 38%, 0.3);
    --glow-soft: 0 0 25px hsl(175, 80%, 42%, 0.4);
  }
}

@layer base {
  * {
    @apply border-border;
  }

  html {
    @apply deep;
    scroll-behavior: smooth;
    scroll-padding-top: 2rem;
  }

  body {
    @apply bg-background text-foreground;
    background: var(--gradient-ocean);
    min-height: 100vh;
    scroll-behavior: smooth;
    scroll-padding-top: 2rem;
  }

  /* Enhanced smooth scrolling */
  * {
    scroll-behavior: smooth;
  }

  /* Custom scrollbar styling for smoother feel */
  ::-webkit-scrollbar {
    width: 8px;
  }

  ::-webkit-scrollbar-track {
    background: hsl(var(--background));
  }

  ::-webkit-scrollbar-thumb {
    background: hsl(var(--primary) / 0.3);
    border-radius: 4px;
    transition: background 0.2s ease;
  }

  ::-webkit-scrollbar-thumb:hover {
    background: hsl(var(--primary) / 0.5);
  }

  /* Firefox scrollbar styling */
  html {
    scrollbar-width: thin;
    scrollbar-color: hsl(var(--primary) / 0.3) hsl(var(--background));
  }
}

/* Underwater Animations */
@keyframes float {
  0%, 100% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-20px);
  }
}

@keyframes bubble-rise {
  0% {
    transform: translateY(0) scale(0);
    opacity: 0;
  }
  50% {
    opacity: 0.6;
  }
  100% {
    transform: translateY(-100vh) scale(1);
    opacity: 0;
  }
}

@keyframes wave {
  0%, 100% {
    transform: translateX(0);
  }
  50% {
    transform: translateX(20px);
  }
}

@keyframes glow-pulse {
  0%, 100% {
    text-shadow: var(--glow-aqua);
  }
  50% {
    text-shadow: var(--glow-soft);
  }
}

@keyframes node-glow {
  0%, 100% {
    box-shadow: 0 0 20px hsl(var(--primary) / 0.6), 0 0 40px hsl(var(--primary) / 0.3);
    transform: scale(1);
  }
  50% {
    box-shadow: 0 0 30px hsl(var(--primary) / 0.8), 0 0 60px hsl(var(--primary) / 0.4);
    transform: scale(1.05);
  }
}

@keyframes light-shimmer {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}

@keyframes particle-drift {
  0% {
    transform: translate(0, 0) rotate(0deg);
  }
  25% {
    transform: translate(100px, -50px) rotate(90deg);
  }
  50% {
    transform: translate(200px, 0) rotate(180deg);
  }
  75% {
    transform: translate(300px, 50px) rotate(270deg);
  }
  100% {
    transform: translate(400px, 0) rotate(360deg);
  }
}

@keyframes fish-swim {
  0% {
    transform: translateX(-100px) translateY(0);
  }
  25% {
    transform: translateX(25vw) translateY(-30px);
  }
  50% {
    transform: translateX(50vw) translateY(0);
  }
  75% {
    transform: translateX(75vw) translateY(30px);
  }
  100% {
    transform: translateX(calc(100vw + 100px)) translateY(0);
  }
}

/* Split Text Animations */
@keyframes fade-in-up {
  0% {
    opacity: 0;
    transform: translateY(30px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fade-in-down {
  0% {
    opacity: 0;
    transform: translateY(-30px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fade-in-left {
  0% {
    opacity: 0;
    transform: translateX(-30px);
  }
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes fade-in-right {
  0% {
    opacity: 0;
    transform: translateX(30px);
  }
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes scale-in {
  0% {
    opacity: 0;
    transform: scale(0.8);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes rotate-in {
  0% {
    opacity: 0;
    transform: rotate(-10deg) scale(0.8);
  }
  100% {
    opacity: 1;
    transform: rotate(0deg) scale(1);
  }
}

/* Carousel Animation Keyframes */
@keyframes slide-in-right {
  0% {
    opacity: 0;
    transform: translateX(100px);
  }
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes slide-in-left {
  0% {
    opacity: 0;
    transform: translateX(-100px);
  }
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes slide-out-right {
  0% {
    opacity: 1;
    transform: translateX(0);
  }
  100% {
    opacity: 0;
    transform: translateX(100px);
  }
}

@keyframes slide-out-left {
  0% {
    opacity: 1;
    transform: translateX(0);
  }
  100% {
    opacity: 0;
    transform: translateX(-100px);
  }
}

/* Utility Classes */
.animate-float {
  animation: float 4s ease-in-out infinite;
}

.animate-bubble {
  animation: bubble-rise 8s ease-in-out infinite;
}

.animate-wave {
  animation: wave 3s ease-in-out infinite;
}

.animate-glow {
  animation: glow-pulse 3s ease-in-out infinite;
}

.animate-node-glow {
  animation: node-glow 2s ease-in-out infinite;
}

/* Split Text Animation Classes */
.animate-fade-in-up {
  animation: fade-in-up ease-out forwards;
}

.animate-fade-in-down {
  animation: fade-in-down ease-out forwards;
}

.animate-fade-in-left {
  animation: fade-in-left ease-out forwards;
}

.animate-fade-in-right {
  animation: fade-in-right ease-out forwards;
}

.animate-scale-in {
  animation: scale-in ease-out forwards;
}

.animate-rotate-in {
  animation: rotate-in ease-out forwards;
}

/* Carousel Animation Classes */
.animate-slide-in-right {
  animation: slide-in-right 0.5s ease-out forwards;
}

.animate-slide-in-left {
  animation: slide-in-left 0.5s ease-out forwards;
}

.animate-slide-out-right {
  animation: slide-out-right 0.3s ease-in forwards;
}

.animate-slide-out-left {
  animation: slide-out-left 0.3s ease-in forwards;
}

.gradient-ocean {
  background: var(--gradient-ocean);
}

.gradient-aqua {
  background: var(--gradient-aqua);
}

.shadow-underwater {
  box-shadow: var(--shadow-underwater);
}

.transition-wave {
  transition: var(--transition-wave);
}

.transition-bubble {
  transition: var(--transition-bubble);
}
